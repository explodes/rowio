// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package rowio

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                *any.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *SetRequest) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type GetRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResponse struct {
	Value                *any.Any `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type ScanRequest struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	FromKey              []byte   `protobuf:"bytes,2,opt,name=fromKey,proto3" json:"fromKey,omitempty"`
	ToKey                []byte   `protobuf:"bytes,3,opt,name=toKey,proto3" json:"toKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (m *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(m, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ScanRequest) GetFromKey() []byte {
	if m != nil {
		return m.FromKey
	}
	return nil
}

func (m *ScanRequest) GetToKey() []byte {
	if m != nil {
		return m.ToKey
	}
	return nil
}

type ScanStream struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *any.Any `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanStream) Reset()         { *m = ScanStream{} }
func (m *ScanStream) String() string { return proto.CompactTextString(m) }
func (*ScanStream) ProtoMessage()    {}
func (*ScanStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *ScanStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanStream.Unmarshal(m, b)
}
func (m *ScanStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanStream.Marshal(b, m, deterministic)
}
func (m *ScanStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanStream.Merge(m, src)
}
func (m *ScanStream) XXX_Size() int {
	return xxx_messageInfo_ScanStream.Size(m)
}
func (m *ScanStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanStream.DiscardUnknown(m)
}

var xxx_messageInfo_ScanStream proto.InternalMessageInfo

func (m *ScanStream) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *ScanStream) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*SetRequest)(nil), "SetRequest")
	proto.RegisterType((*GetRequest)(nil), "GetRequest")
	proto.RegisterType((*GetResponse)(nil), "GetResponse")
	proto.RegisterType((*ScanRequest)(nil), "ScanRequest")
	proto.RegisterType((*ScanStream)(nil), "ScanStream")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xd1, 0x4b, 0x83, 0x50,
	0x14, 0xc6, 0x77, 0x67, 0x6e, 0x74, 0x34, 0x88, 0xcb, 0x18, 0x66, 0x2f, 0x72, 0x21, 0x90, 0x88,
	0xbb, 0x58, 0x10, 0xf4, 0x58, 0x10, 0xa3, 0x7a, 0x08, 0x94, 0x5e, 0x7a, 0x53, 0x39, 0x1b, 0x63,
	0xd3, 0x6b, 0x7a, 0xdd, 0xf0, 0x2f, 0xe8, 0xdf, 0x0e, 0xaf, 0x9a, 0xa3, 0x02, 0xa1, 0x37, 0xbf,
	0x73, 0x8e, 0xe7, 0x77, 0xee, 0xf7, 0xc1, 0x49, 0x8e, 0xd9, 0x6e, 0x1d, 0x21, 0x4f, 0x33, 0x21,
	0x85, 0x7d, 0xb6, 0x12, 0x62, 0xb5, 0xc5, 0x99, 0x52, 0x61, 0xb1, 0x9c, 0x05, 0x49, 0xd9, 0xb4,
	0xce, 0x7f, 0xb6, 0x30, 0x4e, 0x65, 0xd3, 0x64, 0x21, 0x80, 0x8f, 0xd2, 0xc3, 0x8f, 0x02, 0x73,
	0x49, 0xa7, 0x30, 0x0a, 0x8b, 0x68, 0x83, 0xd2, 0x22, 0x0e, 0x71, 0x8f, 0xbd, 0x46, 0xd1, 0x53,
	0xd0, 0x36, 0x58, 0x5a, 0x43, 0x87, 0xb8, 0xa6, 0x57, 0x7d, 0xd2, 0x4b, 0xd0, 0x77, 0xc1, 0xb6,
	0x40, 0x4b, 0x73, 0x88, 0x6b, 0xcc, 0x27, 0xbc, 0x86, 0xf0, 0x16, 0xc2, 0xef, 0x93, 0xd2, 0xab,
	0x47, 0xd8, 0x2d, 0xc0, 0xe2, 0x1f, 0x0c, 0x76, 0x07, 0x86, 0xfa, 0x2f, 0x4f, 0x45, 0x92, 0x63,
	0x87, 0x24, 0xfd, 0xc8, 0x37, 0x30, 0xfc, 0x28, 0x48, 0xfa, 0x98, 0x16, 0x8c, 0x97, 0x99, 0x88,
	0x5f, 0xbe, 0xb9, 0xad, 0xa4, 0x13, 0xd0, 0xa5, 0xa8, 0xea, 0x9a, 0xaa, 0xd7, 0x82, 0x3d, 0x03,
	0x54, 0x6b, 0x7d, 0x99, 0x61, 0x10, 0xb7, 0x17, 0x93, 0x3f, 0x5c, 0x19, 0xf6, 0x9e, 0x38, 0xff,
	0x24, 0x60, 0x7a, 0x62, 0xff, 0xf4, 0xea, 0xd7, 0x41, 0xd2, 0x2b, 0xd0, 0x7c, 0x94, 0xd4, 0xe0,
	0x5d, 0x20, 0xf6, 0xf4, 0xd7, 0x86, 0xc7, 0x2a, 0x3c, 0x36, 0xa0, 0x0c, 0xb4, 0x85, 0x9a, 0xee,
	0xac, 0xb5, 0x4d, 0x7e, 0xe0, 0x17, 0x1b, 0xd0, 0x0b, 0x38, 0xaa, 0xce, 0xa5, 0x26, 0x3f, 0x30,
	0xc3, 0x36, 0x78, 0xf7, 0x06, 0x36, 0xb8, 0x26, 0x0f, 0xe3, 0x77, 0x3d, 0x13, 0xfb, 0xb5, 0x08,
	0x47, 0x8a, 0x72, 0xf3, 0x15, 0x00, 0x00, 0xff, 0xff, 0x75, 0x61, 0xa3, 0x4f, 0x5c, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RowIOServiceClient is the client API for RowIOService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RowIOServiceClient interface {
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (RowIOService_ScanClient, error)
}

type rowIOServiceClient struct {
	cc *grpc.ClientConn
}

func NewRowIOServiceClient(cc *grpc.ClientConn) RowIOServiceClient {
	return &rowIOServiceClient{cc}
}

func (c *rowIOServiceClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/RowIOService/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rowIOServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/RowIOService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rowIOServiceClient) Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (RowIOService_ScanClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RowIOService_serviceDesc.Streams[0], "/RowIOService/Scan", opts...)
	if err != nil {
		return nil, err
	}
	x := &rowIOServiceScanClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RowIOService_ScanClient interface {
	Recv() (*ScanStream, error)
	grpc.ClientStream
}

type rowIOServiceScanClient struct {
	grpc.ClientStream
}

func (x *rowIOServiceScanClient) Recv() (*ScanStream, error) {
	m := new(ScanStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RowIOServiceServer is the server API for RowIOService service.
type RowIOServiceServer interface {
	Set(context.Context, *SetRequest) (*empty.Empty, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Scan(*ScanRequest, RowIOService_ScanServer) error
}

func RegisterRowIOServiceServer(s *grpc.Server, srv RowIOServiceServer) {
	s.RegisterService(&_RowIOService_serviceDesc, srv)
}

func _RowIOService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RowIOServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RowIOService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RowIOServiceServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RowIOService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RowIOServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RowIOService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RowIOServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RowIOService_Scan_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ScanRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RowIOServiceServer).Scan(m, &rowIOServiceScanServer{stream})
}

type RowIOService_ScanServer interface {
	Send(*ScanStream) error
	grpc.ServerStream
}

type rowIOServiceScanServer struct {
	grpc.ServerStream
}

func (x *rowIOServiceScanServer) Send(m *ScanStream) error {
	return x.ServerStream.SendMsg(m)
}

var _RowIOService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RowIOService",
	HandlerType: (*RowIOServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _RowIOService_Set_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _RowIOService_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Scan",
			Handler:       _RowIOService_Scan_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service.proto",
}
